"""
Finds the neighbors of a null node (a node without coordinates) in a geo text route network.
The results are writen in a json file, called "null_neighbors.json"
"""

from networkx.readwrite import json_graph
import io, json, csv
import re
import networkx as nx
import sys  

def findNeighbours_of_Nulls(fileName):
   G = nx.Graph()
   with open(fileName, 'r') as meterFile:
      distReader = csv.reader(meterFile, delimiter=',')
      next(distReader, None)
      for row in distReader:
        G.add_node(row[0], lat=row[1], lng=row[2])
        G.add_node(row[3], lat=row[4], lng=row[5])
        G.add_edge(row[0],row[3], length= row[-1])
   neighbors = {}     
#  if G.node[node]['lat'] == "null" and G.node[node]['lng'] == "null" and len(G.neighbors(node)) > 1:       
   #    null_coord_nodes.append([node, "null"])
   nulls = len([n for n in G.nodes() if G.node[n]['lat'] == "null" and G.node[n]['lng'] == "null"])
   for node in G.nodes():
     neighbors[node] = []
     for nei in G.neighbors(node):
       tmp = {}
       tmp[nei] = {}
       tmp[nei]['lat'] = G.node[nei]['lat']
       tmp[nei]['lng'] = G.node[nei]['lng']
       neighbors[node].append(tmp)
   with open('../Data/null_neighbors.json', 'w', encoding='utf8') as outfile:
        json.dump(neighbors, outfile, indent=4, ensure_ascii=False)


	
findNeighbours_of_Nulls("../Data/tripleRoutes_withMeter2")
print("done!")

